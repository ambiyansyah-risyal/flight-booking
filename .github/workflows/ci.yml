name: Go CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Download deps
        run: go mod download

      - name: Build
        run: go build ./...

      - name: Test
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic

      - name: Enforce coverage â‰¥ 90%
        run: |
          total=$(go tool cover -func=coverage.out | awk '/^total:/ {print $3}' | sed 's/%//')
          echo "Total coverage: ${total}%"
          awk -v c="$total" 'BEGIN { if (c+0 < 90) { print "Coverage below 90%"; exit 1 } }'

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          flags: unittests
          fail_ci_if_error: false
